# Default values for mcp-prometheus
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: gsoci.azurecr.io
  repository: giantswarm/mcp-prometheus
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  fsGroup: 1000

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mcp-prometheus.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: mcp-prometheus-tls
  #    hosts:
  #      - mcp-prometheus.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# MCP-specific health probes that test actual MCP functionality
livenessProbe: {}

readinessProbe: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: tmp
    emptyDir: {}

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: tmp
    mountPath: /tmp

nodeSelector: {}

tolerations: []

affinity: {}

# Application specific configuration
app:
  # Server configuration
  server:
    # Transport type: stdio, sse, or streamable-http
    transport: "streamable-http"
    # HTTP server address (for sse and streamable-http transports)
    httpAddr: ":8080"
    # SSE endpoint path (for sse transport)
    sseEndpoint: "/sse"
    # Message endpoint path (for sse transport)
    messageEndpoint: "/message"
    # HTTP endpoint path (for streamable-http transport)
    httpEndpoint: "/mcp"
    # Enable debug logging
    debug: false

  # Environment variables for Prometheus configuration
  # These can be used to provide default Prometheus settings
  env:
  - name: PROMETHEUS_URL
    value: "http://mimir-gateway.mimir.svc/prometheus"
  - name: PROMETHEUS_ORGID
    value: giantswarm
    # - name: PROMETHEUS_URL
    #   value: "http://prometheus:9090"
    # - name: PROMETHEUS_ORGID
    #   value: "default"
    # - name: PROMETHEUS_USERNAME
    #   valueFrom:
    #     secretKeyRef:
    #       name: prometheus-auth
    #       key: username
    # - name: PROMETHEUS_PASSWORD
    #   valueFrom:
    #     secretKeyRef:
    #       name: prometheus-auth
    #       key: password
    # - name: PROMETHEUS_TOKEN
    #   valueFrom:
    #     secretKeyRef:
    #       name: prometheus-auth
    #       key: token
